<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://queb.fun</id>
    <title>千木岛</title>
    <updated>2022-02-15T21:12:50.802Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://queb.fun"/>
    <link rel="self" href="https://queb.fun/atom.xml"/>
    <subtitle>如梦似幻</subtitle>
    <logo>https://queb.fun/images/avatar.png</logo>
    <icon>https://queb.fun/favicon.ico</icon>
    <rights>All rights reserved 2022, 千木岛</rights>
    <entry>
        <title type="html"><![CDATA[为什么用了Gridea更新的更少了]]></title>
        <id>https://queb.fun/post/wei-shi-me-yong-liao-gridea-geng-xin-de-geng-shao-liao/</id>
        <link href="https://queb.fun/post/wei-shi-me-yong-liao-gridea-geng-xin-de-geng-shao-liao/">
        </link>
        <updated>2022-02-15T21:01:03.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>为啥啊，<s>当然是因为我懒</s> 因为 Gridea 这种静态博客工具一个难以解决的问题就是怎么备份自己的post。尤其是之前用了hexo更换之后大量的元数据出现了问题，进一步恶化了这件事情。</p>
<p>现在把整个post搬到了坚果云上，如果下次还记得这回事的话应该会稍微，好那么一点吧？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[料理包评测记录]]></title>
        <id>https://queb.fun/post/liao-li-bao-ping-ce-ji-lu/</id>
        <link href="https://queb.fun/post/liao-li-bao-ping-ce-ji-lu/">
        </link>
        <updated>2022-02-15T20:51:45.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://s6.jpg.cm/2022/02/16/LBquTR.jpg" alt="LBquTR.jpg" loading="lazy"></figure>
<p>主要记一下自己吃过的口味还不错的料理包。煮饭什么的最麻烦了</p>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://s6.jpg.cm/2022/02/16/LBquTR.jpg" alt="LBquTR.jpg" loading="lazy"></figure>
<p>主要记一下自己吃过的口味还不错的料理包。煮饭什么的最麻烦了</p>
<!-- more -->
<h2 id="王小余">王小余</h2>
<p>总的来说这家料理包，油和调味用的不错。量比较少，盐中等</p>
<h3 id="肉末外婆菜">肉末外婆菜</h3>
<p>垃圾，别吃。肉末显微镜下可能能看见吧，我视力不好别搞</p>
<h3 id="香菇鸡丁">香菇鸡丁</h3>
<p>这个不错，口感和味道都不错</p>
<h3 id="啤酒鸭">啤酒鸭</h3>
<p>究极垃圾，一股怪味。骨头还多。禽肉还是别料理包了，尤其是带骨头的</p>
<h3 id="武冈香干炒肉">武冈香干炒肉</h3>
<p>实际上就是豆干炒豆干，肉不能说没有吧，但是别指望</p>
<h3 id="巴西烤肉">巴西烤肉</h3>
<p>心中的MVP，好吃就完事了。说起来都是调味料的味道但是都吃料理包了还要什么自行车</p>
<h3 id="青豆炒肉">青豆炒肉</h3>
<p>还可以，炒肉=炒肉末，但好歹也是肉。青豆挺软的味道ok</p>
<p>这家的调味都挺相似的，油分比较大，不过不是油腻的那种。3.5/5</p>
<h2 id="新美香">新美香</h2>
<p>在买上面那个王小余之前我买了挺久这家的。对比之后发现这家的口感很奇怪，像是加了不少增稠剂。但是用料上还是可以的，可能是我没有get到他的好。吃的挺多但是我记不大住了，就随便写几个</p>
<h3 id="台式卤肉-香菇卤肉">台式卤肉 &amp; 香菇卤肉</h3>
<p>**咸！**这个卤肉某种意义上可以算作是浇头。当菜绝对是大材小用了。肉都是小丁丁而且偏肥。如果住了面之类的可以配一下，还不错</p>
<h3 id="咖喱鸡肉">咖喱鸡肉</h3>
<p>除了那个奇怪的勾芡问题以外还可以，鸡肉的口感很松弛但是量还是够的。</p>
<h3 id="鱼香肉丝">鱼香肉丝</h3>
<p>同上，味道还行勾芡怪怪的。</p>
<h3 id="一些带骨肉的菜">一些带骨肉的菜</h3>
<p>统统不推荐，料理包不要买带骨头的，很蠢。</p>
<h3 id="肉末茄子">肉末茄子</h3>
<p>还可以，茄子倒是很适合他这个勾芡。我喜欢。</p>
<hr>
<p>未完待续</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[博客迁移到Gridea]]></title>
        <id>https://queb.fun/post/bo-ke-qian-yi-dao-gridea/</id>
        <link href="https://queb.fun/post/bo-ke-qian-yi-dao-gridea/">
        </link>
        <updated>2020-07-13T06:35:29.000Z</updated>
        <content type="html"><![CDATA[<p>Hexo很好,但是我不太懂它的模板语法,而且我懒,所以经过五分钟的调研我选择了 <a href="https://github.com/getgridea/gridea">Gridea</a> 作为博客的框架,然后从里面找了个顺眼的主题</p>
<p>Gridea的快捷键还不是很到位,也不支持<code>Hot Reload</code>,总的来说是能用,但是不算好用的,编辑器本身性能一般,不过我也不太介意,好看还是很好看的,重点是它的自动部署功能,不过我暂时没看到支持ssh,希望支持,否则就不太行了</p>
<p>自定义主题还是算了,有心无力,这一年仍然是饱尝无力感的一年,希望大家平安.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[通过NoVpaJpeg.kext解决 macOS Mojave(10.14)下预览jpg格式崩溃]]></title>
        <id>https://queb.fun/post/通过NoVpaJpeg.kext解决 macOS Mojave(10.14)下预览jpg格式崩溃/</id>
        <link href="https://queb.fun/post/通过NoVpaJpeg.kext解决 macOS Mojave(10.14)下预览jpg格式崩溃/">
        </link>
        <updated>2018-11-26T11:02:17.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2018/12/02/5c03976c6e5e0.png" alt="56493506_p0.png" loading="lazy"></figure>
<p>​	黑苹果升级到Mojave(10.14)后，遇到了通过预览打开jpg格式的图片时，预览会崩溃/卡转圈的情况，经过一番摸索，发现原因是预览调用了集显来解码JPG格式，而我因为有独显并没有打开集显。</p>
<p>​	除了通过修改为没有集显的机型SMBIOS 或者开启机器的集显，还有一种方法是在Clover中添加NoVPAJpeg.kext驱动来禁用集显解码。</p>
<p>​	原帖和Github放在了文章下方。</p>
<p>​	实测RX580工作正常。</p>
<p>更多……：</p>
<ul>
<li><a href="https://www.insanelymac.com/forum/topic/334881-how-to-fix-quick-look-and-preview-issues-in-mojave/?page=8">[HOW TO] Fix Quick Look and Preview issues in Mojave</a></li>
<li><a href="https://github.com/vulgo/NoVPAJpeg">NoVPAJpeg</a></li>
<li>题图：id=56493506</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Clover DSDT 笔记]]></title>
        <id>https://queb.fun/post/Clover-DSDT-笔记/</id>
        <link href="https://queb.fun/post/Clover-DSDT-笔记/">
        </link>
        <updated>2018-10-30T12:16:12.000Z</updated>
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=30148963&auto=1&height=66"></iframe>
<p>​	本文是我在研究黑苹果DSDT期间所做的技术笔记，可读性会很差，建议善用搜索功能。</p>
<p>​	Clover修正DSDT的方式主要有两种：Patched 与 hotpatch。hotpatch主要是对原有的属性进行修正，而patched相当于为电脑添加了新的属性。故两者不能混淆。</p>
<p>​	Clover对DSDT热修补(hotpatch)的大致思路是将现有的需要修正的DSDT进行「重命名」，然后制作一个自定的DSDT文件（.aml)。将系统原生的DSDT访问指向自定的文件，然后就可以做到自定义指定DSDT的行为，此处举例：</p>
<pre><code>Comment: Rename _DSM to XDSM
Find: &lt;5f44534d&gt;
Replace: &lt;5844534d&gt;
</code></pre>
<p>注：「_DSM」转为Hex写作&lt;5f44534d&gt;</p>
<p>将系统原生的 _DSM 访问重定向至 XDSM，配合/clover/acpi/hotpatch下的.aml文件就可以拦截处理指定的DSDT。</p>
<p>未完待续……</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[主题修改日志]]></title>
        <id>https://queb.fun/post/主题修改日志/</id>
        <link href="https://queb.fun/post/主题修改日志/">
        </link>
        <updated>2018-08-25T02:13:12.000Z</updated>
        <content type="html"><![CDATA[<p>2018.8.25：</p>
<ul>
<li>暂时修改了部分按钮的颜色——因为根本看不清（<s>但还是很丑，会改的</s>）</li>
<li>将毛玻璃的效果加入了配置文件</li>
</ul>
<p>2018.8.25之前：</p>
<ul>
<li>修改了页面样式</li>
<li>删除了性能堪忧的过渡动画</li>
<li>一些不太记得的东西</li>
</ul>
<p>TODO：</p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-75950"><label class="task-list-item-label" for="task-item-75950"> 将之前的脏代码整理到合适的地方</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7154310"><label class="task-list-item-label" for="task-item-7154310"> 适配Chrome的毛玻璃效果（JS版）</label></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[在hexo页面插入网易云播放器]]></title>
        <id>https://queb.fun/post/在hexo页面插入网易云播放器/</id>
        <link href="https://queb.fun/post/在hexo页面插入网易云播放器/">
        </link>
        <updated>2018-08-23T00:49:33.000Z</updated>
        <summary type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://s6.jpg.cm/2022/02/16/LBqbmt.png" alt="LBqbmt.png" loading="lazy"></figure>
]]></summary>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://s6.jpg.cm/2022/02/16/LBqbmt.png" alt="LBqbmt.png" loading="lazy"></figure>
<!-- more -->
<p>最近终于在百(shou)忙(lie)之余想起来还有个博客的事，最近几个月除了把博客搬迁到了gitpage就完全没有理睬这玩意，既然今天想起来了就干脆把之前魔改留下的坑稍微填一下……</p>
<p>为什么会有这篇文章呢，为了让博客看着稍微正常点，我找了关于如何在Md页面中插入HTML的教程，最后发现是原生支持的……那么问题就变成了要在页面上插入些什么东西才好，思前想后果然还是王道征途，音乐控件吧</p>
<p>那么就是惯例的Google，找到了如下的代码：</p>
<pre><code class="language-html">&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;320&quot; height=&quot;330&quot; src=&quot;https://music.163.com/outchain/player?type=0&amp;amp;id=24972133&amp;amp;auto=0&amp;amp;height=430&quot;&gt;&lt;/iframe&gt;
</code></pre>
<p>将这行代码直接放在需要的地方就可以实现如下效果的播放器：</p>
<!-- more -->
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="320" height="330" src="https://music.163.com/outchain/player?type=0&amp;id=24972133&amp;auto=0&amp;height=430"></iframe>
<p>&lt;iframe&gt;控件的参数可以从<a href="http://www.w3school.com.cn/tags/tag_iframe.asp">这里</a>看到，可以借助参数来调整控件的外观。不过最重要的还是src部分的参数，将sec部分的‘type’和‘id’部分替换成自己的就可以了<br>
其中：</p>
<ul>
<li>type为0的时候对应的是歌单的id；</li>
<li>type为1的时候对应的是专辑的id；</li>
<li>type为2的时候对应的是单曲的id</li>
</ul>
<p>网易云自带的外链设置：<code>https://music.163.com/#/outchain/_type/_id/m/use/html</code>,将_type和_id改为需要的参数即可。</p>
<p><strong>2018.9.4更新</strong></p>
<p>最近将博客迁移到gitpages后发现此前的播放器不能正常显示，Google后发现是gitpage强制开启了https，而我之前的播放器src用了http……修改后解决</p>
<p><a href="http://saili.science/2017/05/30/music/">参考链接</a></p>
<hr>
<p>题图：Pixiv_PID:70217074</p>
<p>#EOF</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Play Store更新APP卡在“正在下载”的解决方法]]></title>
        <id>https://queb.fun/post/Play Store更新APP卡在“正在下载”的解决方法/</id>
        <link href="https://queb.fun/post/Play Store更新APP卡在“正在下载”的解决方法/">
        </link>
        <updated>2018-08-22T21:01:22.000Z</updated>
        <content type="html"><![CDATA[<p>最近几个月遇到了Play Store更新/下载应用时长时间卡在“正在下载…”的情况，然后过了几分钟之后突然开始下载的情况。一开始以为是网络的问题，但是反复检查没有头绪，于是搜索了一下，发现这个现象从去年开始就有相关的资料了（有理由怀疑是Google在搞什么动作）</p>
<p>解决方法也很简单，强行退出Play Store之后，清空Play Store的数据，重新打开就恢复了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nginx从入门到入土#1——配置文件初探]]></title>
        <id>https://queb.fun/post/Nginx从入门到入土#1——配置文件初探/</id>
        <link href="https://queb.fun/post/Nginx从入门到入土#1——配置文件初探/">
        </link>
        <updated>2018-04-13T11:06:22.000Z</updated>
        <summary type="html"><![CDATA[<p>本文意在简要说明Nginx配置文件以尽快上手，诸多进阶配置项不在本文的介绍范围内，请自行Google 😃</p>
<h3 id="nginx-文件树">Nginx 文件树</h3>
<p>Nginx的配置文件主要分为两类——Nginx自身的配置（即/etc/nginx/nginx.conf）和vHost配置文件（/etc/nginx/sites-available内文件）</p>
<p><img src="https://i.loli.net/2018/04/13/5ad0932aba39d.png" alt="" loading="lazy"><br>
（图为/etc/nginx文件夹一览）</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文意在简要说明Nginx配置文件以尽快上手，诸多进阶配置项不在本文的介绍范围内，请自行Google 😃</p>
<h3 id="nginx-文件树">Nginx 文件树</h3>
<p>Nginx的配置文件主要分为两类——Nginx自身的配置（即/etc/nginx/nginx.conf）和vHost配置文件（/etc/nginx/sites-available内文件）</p>
<p><img src="https://i.loli.net/2018/04/13/5ad0932aba39d.png" alt="" loading="lazy"><br>
（图为/etc/nginx文件夹一览）</p>
<!-- more -->
<p>关于Nginx.conf文件，一般情况下不需要调整就可以正常工作，所以本文暂不展开讲解。但是值得注意的是，决定使用哪个vHost配置文件的相关内容位于Nginx.conf文件内：</p>
<pre><code>./nginx.conf
##
# Virtual Host Configs
##

include /etc/nginx/conf.d/*.conf;
include /etc/nginx/sites-enabled/*;
</code></pre>
<p>可以通过更改include字段来选择启用的vHost配置文件</p>
<h3 id="vhost配置">vHost配置</h3>
<p>由上例可知，实际中Nginx使用的是./sites-enabled/下的配置文件，然而一般情况下，我们选择将配置文件放到./sites-available/文件夹下，然后将要应用的配置文件软链接到sites-enabled文件夹下来使用。</p>
<p>如果你是通过apt或yum安装的Nginx，./sites-available/文件夹下应该会有一个default配置（也有可能同时存在它的备份），这就是nginx的默认配置文件。如果只是简单的端口转发/同时运行多个站点，只要在default的基础上进行修改即可。</p>
<p>以下是一个default文件的例子：</p>
<pre><code>server {
	listen 80;
	server_name localhost;
	root /var/www;
	index index.html index.htm;
	access_log  /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
	location / {
		return 301 https://$host$request_uri;
	}
}
</code></pre>
<p>其中：</p>
<ul>
<li>server{}代表了一个服务端，理论上每个不同的服务对应着一个server；</li>
<li>listen指你要监听的端口；</li>
<li>server_name 指响应的域名
<ul>
<li>详见 https://www.jianshu.com/p/2d6f16a32b37</li>
</ul>
</li>
<li>root 指网站的根目录</li>
<li>index指你网站的起始页面</li>
<li>location{}是该服务所响应的路径（即你的域名/IP后面的部分）</li>
</ul>
<p>下面我们详细说明一下location</p>
<pre><code>location /blog {
    stub_status on;
    access_log off;
    root /var/www;
    index index.html;
    }
</code></pre>
<p>location后面跟的“/”就是其响应的路径，其中“/”指的是响应所有路径。即形如“yourdomain.name/*** ”的URL都会被响应。如果location后面跟的是“/blog”，那么形如 “ yourdomain.name/blog ”的URL就会被响应。</p>
<p>是的，同一个server可以有多个location。<br>
同时在location内，server中的一些数据可以被覆盖，比如 root。</p>
<hr>
<p>修改日志：</p>
<p>2018-04-16：稍作修改；</p>
<p>2018-04-13：初版；</p>
<p>#EOF</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[黑苹果升级10.13.4——显卡篇]]></title>
        <id>https://queb.fun/post/黑苹果升级10-13-4——显卡篇/</id>
        <link href="https://queb.fun/post/黑苹果升级10-13-4——显卡篇/">
        </link>
        <updated>2018-03-31T03:53:12.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2018/04/13/5ad080a90ad84.jpg" alt="" loading="lazy"></figure>
<p>###2018.8.23更新：<br>
显卡驱动换为WhateverGreen，在错觉程度的水平上提升了性能表现……</p>
<hr>
<p>今日apple推送了macOS 10.13.4 新增了对eGPU的支持，实测在配合 NvidiaGraphicsFixup 时，可以显著提升MacOS的图形性能。</p>
<p>需要将 NvidiaGraphicsFixup 升级至1.2.5版本，WebDriver升级到387.10.10.10.30.103（即13.4最新版驱动）</p>
<p>升级过程应该不用我多讲了。。。大家一试便知</p>
<p>·附上 NvidiaGraphicsFixup 项目地址   https://github.com/lvs1974/NvidiaGraphicsFixup</p>
<hr>
<p>题图: http://adnmb1.com/t/6621569</p>
]]></content>
    </entry>
</feed>